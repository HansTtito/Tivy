% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial-functions.R
\name{coast_distance}
\alias{coast_distance}
\title{Vectorized distance to coast}
\usage{
coast_distance(
  lon,
  lat,
  coastline = peru_coastline,
  return_indices = FALSE,
  distance_type = "haversine",
  unit = "nm",
  window = 1,
  parallel = FALSE,
  cores = 4
)
}
\arguments{
\item{lon}{Numeric vector with the longitudes of the points of interest.}

\item{lat}{Numeric vector with the latitudes of the points of interest.}

\item{coastline}{Data frame representing the coastline, must contain columns called \code{'Long'} and \code{'Lat'}. Default \code{Tivy::peru_coastline}.}

\item{return_indices}{Logical. If \code{TRUE}, also returns the indices of the nearest coastline points. Default \code{FALSE}.}

\item{distance_type}{Type of geographic distance to use: \code{"haversine"}, \code{"euclidean"}, \code{"grid"}.}

\item{unit}{Unit of measurement for distance: \code{"nm"} (nautical miles), \code{"km"}, etc.}

\item{window}{Search window in degrees around the point to limit calculations and improve efficiency. Default \code{1}.}

\item{parallel}{Logical. If \code{TRUE}, performs the calculation in parallel using multiple cores. Default \code{FALSE}.}

\item{cores}{Number of cores to use for parallel processing. Default \code{4}.}
}
\value{
If \code{return_indices = FALSE}, returns a numeric vector with distances to the coast for each point.
If \code{return_indices = TRUE}, returns a list with:
\itemize{
\item \code{distance}: numeric vector with distances to the coast
\item \code{index}: vector of indices of the nearest point on the coastline
}
}
\description{
Estimates the distance between a set of points (lon, lat) and a coastline defined by coordinates.
It can be executed sequentially or in parallel, and also return the indices of the nearest coastal points.
}
\examples{

data(calas_bitacora)

data_hauls <- process_hauls(data_hauls = calas_bitacora)

coast_distance(
  lon = data_hauls$lon_final,
  lat = data_hauls$lat_final,
  coastline = peru_coastline,
  distance_type = "haversine",
  unit = "nm",
  parallel = TRUE,
  cores = 2
)

}
