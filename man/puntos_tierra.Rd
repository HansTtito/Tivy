% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial-functions.R
\name{puntos_tierra}
\alias{puntos_tierra}
\title{Puntos en tierra}
\usage{
puntos_tierra(
  x_punto,
  y_punto,
  linea_costa = Tivy::linea_costa_peru,
  paralelo = FALSE,
  nucleos = 4,
  tipo_distancia = "haversine",
  ventana = 0.5,
  unidad = "mn"
)
}
\arguments{
\item{x_punto}{Vector numérico de longitudes (en grados decimales).}

\item{y_punto}{Vector numérico de latitudes (en grados decimales).}

\item{linea_costa}{\code{data.frame} con las coordenadas de la línea de costa. Debe tener columnas nombradas \code{Long} y \code{Lat}. Por defecto se puede usar \code{Tivy::linea_costa_peru}.}

\item{paralelo}{Lógico. Si \code{TRUE}, realiza el cálculo en paralelo utilizando múltiples núcleos. Por defecto es \code{FALSE}.}

\item{nucleos}{Número de núcleos a usar en caso de procesamiento paralelo. Por defecto es \code{4}.}

\item{tipo_distancia}{Tipo de distancia geodésica a usar en el cálculo: \code{"haversine"} (por defecto) u otras si la función interna lo permite.}

\item{ventana}{Ventana geográfica en grados para reducir el número de puntos de la línea de costa a considerar por cada punto. Por defecto es \code{0.5}.}

\item{unidad}{Unidad de medida para la distancia: \code{"km"} (por defecto) u otra si la función interna lo permite.}
}
\value{
Un vector de texto del mismo largo que \code{x_punto}, indicando si cada punto se encuentra en \code{"tierra"} o \code{"mar"}. Los valores \code{NA} se mantienen como \code{NA}.
}
\description{
Esta función clasifica un conjunto de coordenadas geográficas (longitud y latitud) como "tierra" o "mar" según su posición relativa a una línea de costa. Se considera que un punto está en tierra si su longitud es mayor a la de su punto más cercano en la línea de costa. Además, permite el cálculo en paralelo para mejorar el rendimiento en grandes volúmenes de datos.
}
\details{
Esta función usa internamente \code{Tivy:::calcular_distancias_vectorizado()} para identificar el punto más cercano en la línea de costa para cada coordenada. Si \code{paralelo = TRUE}, utiliza los paquetes \code{future} y \code{future.apply} para distribuir el trabajo entre varios núcleos.
}
\examples{
data_calas <- procesar_calas(data_calas = calas_bitacora)
resultado <- puntos_tierra(
  x_punto = data_calas$lon_final,
  y_punto = data_calas$lat_final,
  linea_costa = Tivy::linea_costa_peru
)
table(resultado)

}
