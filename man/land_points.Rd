% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial-functions.R
\name{land_points}
\alias{land_points}
\title{Points on land}
\usage{
land_points(
  x_point,
  y_point,
  coastline = peru_coastline,
  parallel = FALSE,
  cores = 4,
  distance_type = "haversine",
  window = 0.5,
  unit = "nm"
)
}
\arguments{
\item{x_point}{Numeric vector of longitudes (in decimal degrees).}

\item{y_point}{Numeric vector of latitudes (in decimal degrees).}

\item{coastline}{\code{data.frame} with coastline coordinates. Must have columns named \code{Long} and \code{Lat}. By default, \code{Tivy::peru_coastline} can be used.}

\item{parallel}{Logical. If \code{TRUE}, performs the calculation in parallel using multiple cores. Default is \code{FALSE}.}

\item{cores}{Number of cores to use for parallel processing. Default is \code{4}.}

\item{distance_type}{Type of geodesic distance to use in the calculation: \code{"haversine"} (default) or others if the internal function allows it.}

\item{window}{Geographic window in degrees to reduce the number of coastline points to consider for each point. Default is \code{0.5}.}

\item{unit}{Unit of measurement for distance: \code{"km"} (default) or another if the internal function allows it.}
}
\value{
A text vector of the same length as \code{x_point}, indicating whether each point is on \code{"land"} or \code{"sea"}. \code{NA} values are maintained as \code{NA}.
}
\description{
This function classifies a set of geographic coordinates (longitude and latitude) as "land" or "sea" according to their relative position to a coastline. A point is considered to be on land if its longitude is greater than that of its nearest point on the coastline. Additionally, it allows parallel computation to improve performance with large volumes of data.
}
\details{
This function internally uses \code{calculate_distances_vectorized()} to identify the nearest point on the coastline for each coordinate. If \code{parallel = TRUE}, it uses the \code{future} and \code{future.apply} packages to distribute the work among multiple cores.
}
\examples{

data(calas_bitacora)

data_hauls <- process_hauls(data_hauls = calas_bitacora)

result <- land_points(
  x_point = data_hauls$lon_final,
  y_point = data_hauls$lat_final,
  coastline = Tivy::peru_coastline
)

table(result)

}
